---
import Base from "../layouts/Base.astro";
import Container from "../components/base/Container.astro";
import Section from "../components/base/Section.astro";
---

<Base title="Connect | Omar Hernandez">
  <main id="main" class="contact-page hero-header">
    <div class="wrapper">
      <main class="page">
        <section class="page__main main main_contact main_pages animate-page-section">
          <div class="main__container main__container_pages animate-page-container">
            <div class="page-header animate-page-header">
              <h1 class="page-header__title">
                <span class="decrypt-text wave-text wave-ripple" data-text="Connect" tabindex="0">Connect</span>
              </h1>
            </div>
            <div class="main__quote animate-fade-in-up animate-delay-1" id="inspirational-quote" aria-label="inspirational quote">
              <span class="quote-text"></span>
              <div class="wisdom-pointer" aria-hidden="true">
                Click here for more wisdom
              </div>
            </div>
          </div>
        </section>
        <section class="page__contact contact animate-page-section">
          <!-- Matrix Rain Background -->
          <div id="matrix-rain-background">
            <canvas id="matrix-rain-canvas"></canvas>
          </div>
          <div class="contact__container animate-page-container">
            <div class="contact__contacts">
              <div class="faq-section">
                <h3>Frequently Asked Questions</h3>
                
                <div class="faq-item">
                  <button class="faq-question" type="button" aria-expanded="false">
                    <span>What types of websites do you build?</span>
                    <svg class="chevron-icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
                    </svg>
                  </button>
                  <div class="faq-answer">
                    <p>I specialize in custom, low-cost websites for businesses, including portfolio sites, e-commerce platforms, and professional service websites. All sites are built with modern technologies and optimized for performance.</p>
                  </div>
                </div>

                <div class="faq-item">
                  <button class="faq-question" type="button" aria-expanded="false">
                    <span>Do you create automation tools?</span>
                    <svg class="chevron-icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
                    </svg>
                  </button>
                  <div class="faq-answer">
                    <p>Yes! I develop custom automation tools to save time and reduce manual work. This includes workflow automation, data processing tools, and integration between different systems you use.</p>
                  </div>
                </div>

                <div class="faq-item">
                  <button class="faq-question" type="button" aria-expanded="false">
                    <span>Can you help replace Excel-based operations?</span>
                    <svg class="chevron-icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
                    </svg>
                  </button>
                  <div class="faq-answer">
                    <p>Absolutely! I can help transition from complex Excel sheets to more efficient database-driven solutions that track leads, clients, and submissions all in one organized system.</p>
                  </div>
                </div>

                <div class="faq-item">
                  <button class="faq-question" type="button" aria-expanded="false">
                    <span>How do you implement AI solutions?</span>
                    <svg class="chevron-icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
                    </svg>
                  </button>
                  <div class="faq-answer">
                    <p>I help businesses explore and implement AI solutions tailored to their specific needs, from chatbots and automated customer service to data analysis and predictive tools.</p>
                  </div>
                </div>

                <div class="faq-item">
                  <button class="faq-question" type="button" aria-expanded="false">
                    <span>What about security and data protection?</span>
                    <svg class="chevron-icon" width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z"/>
                    </svg>
                  </button>
                  <div class="faq-answer">
                    <p>Security is a top priority. I implement robust protection for forms, data, and digital workflows, including encryption, secure authentication, and compliance with data protection standards.</p>
                  </div>
                </div>
                
                <hr class="faq__divider" />
                
                <div class="faq__social">
                  <a href="https://github.com/oohmxi" target="_blank" rel="noopener noreferrer" class="faq__social-link" title="GitHub">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                  </a>
                  <a href="https://www.linkedin.com/in/omarhlink/" target="_blank" rel="noopener noreferrer" class="faq__social-link" title="LinkedIn">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                    </svg>
                  </a>
                  <a href="https://www.instagram.com/emorymiami/" target="_blank" rel="noopener noreferrer" class="faq__social-link" title="Instagram">
                    <svg width="32" height="32" viewBox="0 0 24 24" fill="currentColor">
                      <path d="M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.40z"/>
                    </svg>
                  </a>
                </div>
              </div>
            </div>
            <div class="contact__info">
              <form class="contact-form" id="contactForm">
                <!-- Honeypot field - hidden from users but visible to bots -->
                <div style="position: absolute; left: -9999px; opacity: 0;" aria-hidden="true">
                  <label for="website">Website</label>
                  <input type="text" id="website" name="website" tabindex="-1" autocomplete="off" />
                </div>
                
                <div class="form-group">
                  <label for="name">Name</label>
                  <input type="text" id="name" name="name" placeholder="" minlength="2" maxlength="100" required />
                </div>
                <div class="form-group">
                  <label for="email">Email</label>
                  <input type="email" id="email" name="email" placeholder="" required />
                </div>
                <div class="form-group">
                  <label for="message">Message</label>
                  <div class="message-input-container">
                    <textarea id="message" name="message" rows="3" placeholder="" minlength="10" maxlength="1000" required></textarea>
                    <div class="typewriter-placeholder" id="typewriter-placeholder">
                      <span class="typewriter-text" id="contact-typewriter-text"></span>
                    </div>
                    <!-- Character counter -->
                    <div class="character-counter" id="characterCounter">
                      <span id="charCount">0</span>/1000 characters
                    </div>
                  </div>
                </div>
                <button type="submit" class="send-message-button button" id="submitButton">
                  <span class="button-text">Send Message</span>
                  <span class="button-loading" style="display: none;">Sending...</span>
                </button>
                
                <!-- Success/Error Messages -->
                <div id="formMessage" class="form-message" style="display: none;"></div>
              </form>
            </div>
          </div>
        </section>

      </main>
    </div>
    
    <!-- Matrix Rain Control Button -->
    <button class="matrix-control auto-hide" 
            type="button" 
            id="matrix-control-btn"
            aria-label="Pause/Resume Matrix Rain Animation"
            title="Click to pause/resume matrix rain">
      <svg class="matrix-control-icon" viewBox="0 0 24 24" aria-hidden="true">
        <path id="matrix-control-icon-path" d="M8 5v14l11-7z"/>
      </svg>
    </button>
  </main>
</Base>

<!-- Load confetti library -->
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>

<script is:inline>
  (function() {
    'use strict';
    
    // Initialize FAQ functionality
    function initFAQ() {
      const faqQuestions = document.querySelectorAll('.faq-question');
      
      faqQuestions.forEach(question => {
        question.addEventListener('click', function() {
          const answer = this.nextElementSibling;
          const isExpanded = this.getAttribute('aria-expanded') === 'true';
          
          // Close all other FAQ items
          faqQuestions.forEach(otherQuestion => {
            if (otherQuestion !== this) {
              otherQuestion.setAttribute('aria-expanded', 'false');
              otherQuestion.nextElementSibling.classList.remove('active');
            }
          });
          
          // Toggle current FAQ item
          if (isExpanded) {
            this.setAttribute('aria-expanded', 'false');
            answer.classList.remove('active');
          } else {
            this.setAttribute('aria-expanded', 'true');
            answer.classList.add('active');
          }
        });
        
        // Handle keyboard navigation
        question.addEventListener('keydown', function(e) {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            this.click();
          }
        });
      });
    }
    
    // Character counter functionality
    function initCharacterCounter() {
      const messageField = document.getElementById('message');
      const charCount = document.getElementById('charCount');
      const characterCounter = document.getElementById('characterCounter');
      
      if (!messageField || !charCount || !characterCounter) return;
      
      function updateCounter() {
        const length = messageField.value.length;
        charCount.textContent = length;
        
        // Change color when approaching limit
        if (length >= 950) {
          characterCounter.style.color = '#ff4444';
        } else if (length >= 800) {
          characterCounter.style.color = '#ff8800';
        } else {
          characterCounter.style.color = '';
        }
      }
      
      messageField.addEventListener('input', updateCounter);
      updateCounter(); // Initialize counter
    }
    
    // Confetti celebration
    function triggerConfetti() {
      if (typeof confetti === 'undefined') return;
      
      // Multiple confetti bursts over 2-3 seconds
      const duration = 2000;
      const animationEnd = Date.now() + duration;
      
      function randomInRange(min, max) {
        return Math.random() * (max - min) + min;
      }
      
      const interval = setInterval(() => {
        const timeLeft = animationEnd - Date.now();
        
        if (timeLeft <= 0) {
          clearInterval(interval);
          return;
        }
        
        // Random confetti bursts
        confetti({
          particleCount: randomInRange(50, 100),
          spread: randomInRange(50, 70),
          origin: { y: randomInRange(0.6, 0.8) }
        });
      }, 200);
    }
    
    // Contact form submission handler
    function initContactForm() {
      const form = document.getElementById('contactForm');
      const submitButton = document.getElementById('submitButton');
      const buttonText = submitButton.querySelector('.button-text');
      const buttonLoading = submitButton.querySelector('.button-loading');
      const formMessage = document.getElementById('formMessage');
      
      if (!form) return;
      
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Show loading state
        submitButton.disabled = true;
        buttonText.style.display = 'none';
        buttonLoading.style.display = 'inline';
        formMessage.style.display = 'none';
        
        // Clear any previous field highlighting
        const fields = form.querySelectorAll('input, textarea');
        fields.forEach(field => {
          field.style.borderColor = '';
        });
        
        // Get form data
        const formData = new FormData(form);
        const data = {
          name: formData.get('name'),
          email: formData.get('email'),
          message: formData.get('message'),
          website: formData.get('website') // honeypot field
        };
        
        try {
          const response = await fetch('/api/contact', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });
          
          const result = await response.json();
          
          if (result.success) {
            // Success - show custom message and trigger confetti
            formMessage.textContent = "Thanks for reaching out! I'll get back to you soon.";
            formMessage.className = 'form-message success';
            formMessage.style.display = 'block';
            form.reset();
            
            // Reset character counter
            const charCount = document.getElementById('charCount');
            if (charCount) charCount.textContent = '0';
            
            // Trigger confetti celebration
            triggerConfetti();
            
            // Announce success to screen readers
            formMessage.setAttribute('aria-live', 'polite');
          } else {
            // Error - show specific error message
            formMessage.textContent = result.message || 'Please check your input and try again.';
            formMessage.className = 'form-message error';
            formMessage.style.display = 'block';
            
            // Show field-specific errors if available
            if (result.errors) {
              Object.keys(result.errors).forEach(fieldName => {
                const field = form.querySelector(`[name="${fieldName}"]`);
                if (field) {
                  field.style.borderColor = '#ff4444';
                  field.addEventListener('input', function() {
                    this.style.borderColor = '';
                  });
                }
              });
            }
            
            // Announce error to screen readers
            formMessage.setAttribute('aria-live', 'assertive');
          }
        } catch (error) {
          console.error('Form submission error:', error);
          formMessage.textContent = 'Failed to send message. Please try again.';
          formMessage.className = 'form-message error';
          formMessage.style.display = 'block';
          formMessage.setAttribute('aria-live', 'assertive');
        } finally {
          // Reset button state
          submitButton.disabled = false;
          buttonText.style.display = 'inline';
          buttonLoading.style.display = 'none';
        }
      });
    }
    
    // Initialize when DOM is ready
    function init() {
      initFAQ();
      initCharacterCounter();
      initContactForm();
    }
    
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', init);
    } else {
      init();
    }
  })();
</script>
